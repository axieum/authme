# Prepares, builds and publishes new releases

name: Release

# On changes to release branches
on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  release:
    name: Release

    runs-on: ubuntu-latest

    steps:
      - name: üôå Prepare release
        id: release
        uses: googleapis/release-please-action@v4
        with:
          config-file: .github/release-please.json
          token: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}

  build-and-publish-jar:
    name: Publish

    needs: [ release ]
    if: ${{ needs.release.outputs.release_created == 'true' }}

    runs-on: ubuntu-latest

    steps:
      - name: ‚ú® Checkout repository
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: üêò Set up Gradle
        uses: gradle/gradle-build-action@v2

      - name: üîç Get Gradle properties
        id: props
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: gradle.properties
          properties:
            mod_name
            minecraft_version
            enabled_platforms
            cf_project_id
            mr_project_id

      - name: ü™∂ Publish to Maven
        uses: gradle/gradle-build-action@v2
        with:
          arguments: 'publish'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üìú Publish Fabric release
        id: fabric
        if: contains(steps.props.outputs.enabled_platforms, 'fabric')
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          name: "[Fabric] ${{ steps.props.outputs.mod_name }} ${{ needs.release.outputs.tag_name }}"
          files: |
            fabric/build/libs/!(*-@(dev|dev-shadow|sources)).jar
            fabric/build/devlibs/*-sources.jar
          version: ${{ needs.release.outputs.tag_name }}
          changelog-file: CHANGELOG.md
          loaders: |
            fabric
            quilt
          java: 21
          game-versions: ${{ steps.props.outputs.minecraft_version }}
          curseforge-id: ${{ steps.props.outputs.cf_project_id }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          modrinth-id: ${{ steps.props.outputs.mr_project_id }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

      - name: ü¶ä Publish NeoForge release
        id: neoforge
        if: contains(steps.props.outputs.enabled_platforms, 'neoforge')
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          name: "[NeoForge] ${{ steps.props.outputs.mod_name }} ${{ needs.release.outputs.tag_name }}"
          files: |
            neoforge/build/libs/!(*-@(dev|dev-shadow|sources)).jar
            neoforge/build/devlibs/*-sources.jar
          version: ${{ needs.release.outputs.tag_name }}
          changelog-file: CHANGELOG.md
          loaders: |
            neoforge
          java: 21
          game-versions: ${{ steps.props.outputs.minecraft_version }}
          curseforge-id: ${{ steps.props.outputs.cf_project_id }}
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          modrinth-id: ${{ steps.props.outputs.mr_project_id }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}

      - name: üì¶ Upload artifacts
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.release.outputs.tag_name }}
          files: |
            **/build/devlibs/*-sources.jar
            **/build/libs/*.jar
            !**/build/libs/*-dev-shadow.jar
            !**/build/libs/*-sources.jar
            !build/**
            !common/**
          token: ${{ secrets.GITHUB_TOKEN }}
